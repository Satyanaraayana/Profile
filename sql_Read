

Learn how to work data file and log file in SQL server		
log sequence number (LSN)

Listner port Number: 5022
In mirrioring we need to update gMSA account

------------------------------------------------------

### **1. High Availability & Disaster Recovery (HA/DR)**
#### **Q1: How do AlwaysOn Availability Groups (AGs) differ from Database Mirroring?**  
**A:**  
- **AGs** operate at the database group level, support multiple replicas (up to 8), and allow read-only secondary replicas.  
- **Mirroring** is deprecated, works at the single-database level, and supports only one principal and one mirror.  
- AGs use **Windows Server Failover Clustering (WSFC)** for automatic failover, while mirroring uses a witness server.  
 
#### **Q2: What are the trade-offs between synchronous and asynchronous commit modes in AGs?**  
**A:**  
- **Synchronous:** Zero data loss, higher latency (waits for secondary commit). Ideal for critical data.  
- **Asynchronous:** Lower latency (no wait for secondary), but risk of data loss during failover. Suitable for DR replicas.  
 
### **2. Backup & Recovery**  
#### **Q3: A database’s transaction log is growing uncontrollably. How would you troubleshoot?**  
**A:**  
- Check for **long-running transactions** (`DBCC OPENTRAN`).  
- Ensure **log backups** are running (full recovery model without log backups causes log growth).  
- Investigate **blocking** or **open transactions** using `sys.dm_exec_requests`.  
- Use `SHRINKFILE` cautiously or expand the log file temporarily.  
 
#### **Q4: How do you restore a database to a specific point in time?**  
**A:**  
```sql  
RESTORE DATABASE [DB] FROM DISK='full_backup.bak' WITH NORECOVERY;  
RESTORE LOG [DB] FROM DISK='log_backup.trn' WITH STOPAT='2023-10-01 12:00:00', RECOVERY;  
```  
**Key:** Use `STOPAT` with log backups and ensure the sequence is restored in order.  
 
---
 
### **3. Performance Tuning**  
#### **Q5: A query is slow. How do you diagnose and optimize it?**  
**A:**  
- Check **execution plan** for missing indexes, table scans, or spills to TempDB.  
- Use `SET STATISTICS IO, TIME ON` to identify I/O or CPU bottlenecks.  
- Update statistics (`UPDATE STATISTICS`).  
- Rewrite the query (e.g., avoid `SELECT *`, use temp tables for complex logic).  
 
#### **Q6: What is parameter sniffing, and how do you mitigate it?**  
**A:**  
- **Parameter sniffing** occurs when a cached plan is optimized for a specific parameter value but performs poorly for others.  
- **Mitigation:**  
  - Use `OPTION (RECOMPILE)` for volatile queries.  
  - Force a plan with `USE PLAN`.  
  - Update statistics or use `OPTIMIZE FOR UNKNOWN`.  
 
---
 
### **4. Security & Compliance**  
#### **Q7: How do you implement Transparent Data Encryption (TDE)?**  
**A:**  
1. Create a **master key** in the master database.  
2. Create a **certificate** protected by the master key.  
3. Create a **database encryption key (DEK)** using the certificate.  
4. Enable encryption:  
   ```sql  
   ALTER DATABASE [DB] SET ENCRYPTION ON;  
   ```  
**Note:** Back up the certificate immediately to avoid data loss.  
 
#### **Q8: What is Row-Level Security (RLS), and how is it configured?**  
**A:**  
RLS restricts data access based on user roles/predicates.  
```sql  
CREATE SECURITY POLICY PolicyName  
ADD FILTER PREDICATE dbo.fn_SecurityPredicate(UserID) ON dbo.TableName  
WITH (STATE = ON);  
```  
**Use Case:** Restrict sales data to specific regions.  
 
---
 
### **5. Cloud Integration (Azure)**  
#### **Q9: How do you migrate an on-prem SQL Server database to Azure SQL Managed Instance?**  
**A:**  
- Use **Azure Database Migration Service (DMS)** for minimal downtime.  
- Perform a **log shipping** or **backup/restore** approach.  
- Validate compatibility with **Data Migration Assistant (DMA)**.  
 
#### **Q10: What are the key differences between Azure SQL Database and SQL Managed Instance?**  
**A:**  
- **Azure SQL DB:** Fully managed PaaS, limited to single databases, no SQL Agent.  
- **Managed Instance:** Near 100% compatibility with on-prem SQL Server, supports cross-database queries, SQL Agent, and instance-level features.  
 
---
 
### **6. Automation & Monitoring**  
#### **Q11: How do you automate index maintenance?**  
**A:**  
- Use **Ola Hallengren’s scripts** for rebuild/reorganize based on fragmentation thresholds.  
- Schedule via **SQL Agent Jobs** with fragmentation logic:  
  ```sql  
  EXEC dbo.IndexOptimize @Databases = 'USER_DATABASES', @FragmentationLow = 'INDEX_REORGANIZE', @FragmentationHigh = 'INDEX_REBUILD';  
  ```  
 
#### **Q12: What are critical alerts to configure in SQL Server?**  
**A:**  
- **Severity 17-25 errors** (hardware/memory corruption).  
- **Blocking chains** lasting > 30 seconds.  
- **Transaction log > 80% full**.  
- **Deadlocks** (capture via Extended Events).  
 
---
 
### **7. Troubleshooting Scenarios**  
#### **Q13: Users report deadlocks. How do you capture and resolve them?**  
**A:**  
1. Enable **Deadlock Graph** capture via Extended Events.  
2. Analyze the graph to identify conflicting queries/tables.  
3. Optimize queries (e.g., access tables in the same order, use `NOLOCK` cautiously).  
 
#### **Q14: A server is experiencing high CPU. What steps do you take?**  
**A:**  
1. Check `sys.dm_exec_requests` for running queries.  
2. Identify top CPU-consuming queries:  
   ```sql  
   SELECT TOP 10 * FROM sys.dm_exec_query_stats ORDER BY total_worker_time DESC;  
   ```  
3. Optimize queries (add indexes, reduce complexity).  
 
---
 
### **8. New Features (SQL Server 2022)**  
#### **Q15: What is Ledger in SQL Server 2022?**  
**A:**  
- **Ledger** provides tamper-evident tables for auditing.  
- Uses blockchain-like hashing to detect unauthorized changes.  
- Configure with:  
  ```sql  
  CREATE TABLE [Table] (...) WITH (LEDGER = ON);  
  ```  
 
---
 
### **Behavioral/Scenario Questions**  
#### **Q16: Describe a time you recovered from a major data loss.**  
**Sample Answer:**  
"I restored a 500 GB database using log shipping after a ransomware attack. We validated backups, restored the secondary, and failed over with minimal downtime. Post-incident, we implemented TDE and enhanced backup retention."  
 
#### **Q17: How do you handle a developer’s request for sysadmin access?**  
**Sample Answer:**  
"I’d propose granting **least privilege** (e.g., `db_owner` for their specific database) and audit via SQL Audit. Explain security risks like accidental data deletion or compliance violations."  
 
---
 
### **Key Tips for Success**  
1. **Explain Trade-offs:** Show you understand pros/cons (e.g., AGs vs. Log Shipping).  
2. **Use Real Examples:** Tie answers to past projects (e.g., "I reduced log growth by 70% by fixing a missing index").  
3. **Stay Cloud-Ready:** Highlight Azure/AWS experience (migrations, hybrid setups).  
 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
To change Poling Engine in Orion:

Group by -> Drop Down list
	-> Select Polling Engine 
		-> Select polling Engine Which is having issue 
			-> Select All, Check Box  then (Select All nodes)
				-> More Action 
					-> Change Polling Engine 
						-> Select Destination Polling Engine.
-------------------------------------------------------------------------
HA means that SQL Server instances or Databases will be available and reachable with the least possible down time, 
in case of any server crash or Fail.

--------------------------------
1.Worked on SQL Server Installation in-place up gradation and side by side migration
2.and also worked on Backup and recovery management
	setting up with Daily and weekly jobs, Daily T-Log, Differential backups and full backups.
	Rebuild Index jobs and statistic jobs 
3.also worked on Alerts like Disk space usage alerts, Server down alerts, Services Down alerts, long running queries.
Worked on All the Incidents like when ever alerts triggered the INC will be created, the services request which are raised by customers /requesters,
4.also worked on user management like creating logins and Granting access, giving permission and resetting passwords.
5.Expert on dealing with Disk space issues like Temp, Data, Log.
6.Experienced in all the high availabilities like configuration of Log shipping, doing the manual failover, and working with tuff file and work file
configuration DB mirroring, working with Trasaction replication and snap shot replication.
7.Troubleshooting latency issues and Configuration of AG, synchronization issues, cluster configuration. 
8.Experienced in Performance tuning, adding missing Indexes, checking Execution plan
9.working with Performance tuning Tools like (Database tuning ...., SQL Profiler, Activity Monitor, Query store, identifying Critical Blocks and DedLocks and Resolving )
10.worked on Security Part like Conciguration of Transparent data encryption and Data encryption and Dynamic masking.
11.Coming to Production level changes, we will raising deferent type of changes like Standard changes, Normal and Emergency changes 
we also attend th CAB call to get the approval from the application owners and We will do the regular health checks for the Critical Servers.

Installation errors?
We will be getting some compatibility issue like MSI file missing issues, when we got this error we will go to 
C:\ program files\MS SQL Server\ compatability level setup Boot Strop there is log folder inside that there is a 
Summary.exe file there we can see status of the installation like pass/fail, if it was we can see records for errors, 
`based up on that record we will troubleshoot accordingly

After Installation what are the DB are available ?
master
model
MSDB
TempDB
When ever we configure replication there is Distribution DB will created
there is another DB is call Resource DB, that is Hidden and Read only DB, that we cont see through the  SSMS.
Total we have 6 system DBs



-----------------------------------------------------------------
	
--What do you understand by Index, specifically Clustering and non Clustering Index.
		 
		“Indexes are database objects that enhance the speed of data retrieval operations. 
		Cluster Index:
			Determines the physical order of the data in the table.
			Cluster is a type of index that determines the physical order in which the data values will be stored in a table.
		
		Non- Clustered index:
			Creates a separate structure with pointers to the data.
			Non cluster index holds pointers to the actual data.
		
	See if we have table without Indexes that table we can call it as Heap Table.
	
	if U perform a search in that table scan will be happen on every row and every page that is not good for the SQL Server.
	
	If we add a Cluster INdex to the particular table the data will be sorted in order wise so that would be easer to user to fetch the Data.
	if you perform a search in the cluster table, the cluster Index scan will be happen that will good when compare to table scan.
	if you add non cluster to the particular table with the help of Primary Kay and Where condition it can fetch the Data very quickly when compare to Table scan
	and Index Scan,
	if you perform Search on non cluster table Index Scan will happen.
	
	--Fill Factor :
	Fill factor is provided for fine-tuning index data storage and performance. 
	When an index is created or rebuilt, the fill-factor value determines the percentage of space on each leaf-level page to be filled with data,
	reserving the rest as free space for future growth.
	
	Schema is nothing but qualified object for the DB.

	--Fragmentation in SQL Server occurs when data pages in indexes are not organized logically, are overfilled, 
	(or) are loosely filled. This can lead to poor application and server performance, as well as increased query processing time.

Q-- When will you perform Fragmentation in SQL- When Average percent of Fragmentation reached/hit 90% then we need perform Fragmentation.
	--To reduce fragmentation in SQL Server, you can try these best practices: 
	Use a MAINTENANCE plan, 
	Use the UPDATE STATISTICS command,
	Choose the correct FILL-FACTOR value, 
	Use the ONLINE option, and Regularly monitor index fragmentation.
	We can also defragment your indexes by rebuilding them. Rebuilding indexes involves dropping and then recreating the database indexes.
	**DBCC SHOWCONFIG(Table name) -  to check the fragmentation level


Q--Application team facing issues on DB level, for performance issues.

	1st we have to identify like which query is running, based on that we have to check Storeprocedure like sp_Who2 active/sp_whoisactive, 
	we have to check Query Status like Runnable, Running, Sleeping, Suspended, howmuch CPU, RAM consuming, temp DB allocation,
	
	How much is the Disk IO, and Disk IO have to improve rapidly so that the query is running Good, if Disk IO not moving then we have say that Query is not running good
	
	then we have identify the particular query then we have to check if there is any blocking are happening, if we can see the multiple blocking 
	then we have identify the Header Blocker with the help of Activity Monitor
	if we have a approval we can kill the Header blocker to release the sessions, Some times we dont get the approvals to kill sessions on production servers
	then we have to tune the particular query by checking execution plans, we have different execution plans, if we are good to execute the query 
	then we can check the include execution plan
	if you are not allowed to include execution plan, then we need to check display estimated executed plan and validate the Scannings 
	To eliminate this process we have to add Proper Indexes on particular columns where we are using where condition, where we are using Joins, we have to identify the particular columns and have to add Indexes to it.
	
	And also checking the Fragmentation
	
	have to check statistics of the Query, 
		more Physical reads decrease the performance and more Logical reads improve the performance.
		
	We have improve the logical reads for that we have to take care of this PLE(Page life expectancy) value  to improve the PLE value 
	we have to add the Service Account in Lock pages and Memory
	so that it can force the data to stay in the Data Cache for a long time, so that logical read will happed.
	
	and also we will check some Server level configuration

Q. --What is the MAX DOP value,
		(MAXDOP) is a server configuration option for running SQL Server on multiple CPUs. 
		It controls the number of processors used to run a single statement in parallel plan execution. 
		The default value is 0, which enables SQL Server to use all available processors. This can affect performance
		
Q. --What is the cost threshold parallelism value, it value should be low like 5 sec, 10 Sec. so that parallel process will happen very quickly.
		and Max memory should be set to 75% of the Total memory,
		and also check Query Wait time and Isolation level set to Default to identify the issue.
		
Q. --Can we add Cluster and non Cluster indexes on same column?
	 Yes we can add Cluster and non Cluster indexes on same column, but if you want to add 1000 Indexes 
	 we can add only one cluster Index and 999 non cluster Indexes.
	 
Q. --Can we configure AG and Replication on same DB?
	Yes we can configure AlwaysOn and Replication on same DB but we cant configure Log-shipping and Mirroring.


Q.--What is Log-shipping
	one of the High availability in SQL Server it is a DB level High availability, 
	we can sync Data between one server to another server with the help of SQL Server Agent Jobs, 
	there are 3 job will be created while configuring log-shipping.
	Backup Job at Primary side Copy job and Restore job at Secondary side.
	We have 2 modes in Log shipping
	Log-shipping with No recovery - The secondary database in restoring mode that no one can access the DB
	Log-shipping with StandBy - Users can connect the secondary DB and they can read DB but they are restricted to modify.
	and we have only manual failover option, we dont have Automatic failover option.
	
what are the jobs creating during log-shipping ?
	Backup Job at Primary side Copy job and Restore job at Secondary side.


Q.--What is TUF file ?
	.TUF file is the Transaction Undo File, which is created when performing log shipping to a server in Standby mode.
	When the database is in Standby mode the database recovery happens when the log is restored;
	and this mode also creates a file on destination server with .TUF extension which is the transaction undo file.


Q. --What are the phases DB recovery.
	When ever SQL server starts or Restart we have 3 phases,
	Analysis phase 
	Undo phase and Redo phase

Q.--What is DCM (deferential change mapping)?:  It is a kind of page
	in AG can we perform backups on secondary? if yes what type of backups we ca take?
	1434 is the default port number for the SQL Server Browser services
	if we are working with SQL Server Named instances if other users trying to connect when they are remote, 
	then they are connected through TCPIP in this case browser should be enabled

--Asynchronous-commit mode: 
	In this mode, Primary replica sends the transaction log blocks to a secondary replica, 
	but it does not wait for the acknowledgement for transaction commit. It is suitable for disaster recovery solutions.
	This Mode reduces transaction latency on Secondary Databases while allowing them to lag behind Primary Databases, 
	potentially leading to data loss.
--Synchronous-commit mode: 
	In synchronous-commit mode, the primary replica waits for the transaction commit from a secondary replica. 
	Once it receives the confirmation, SQL Server confirms to the client
	
--Benefits of an Always On SQL Server

	Always On SQL Server Availability Groups support up to 9 Availability Replicas. Every Availability Group supports 1 Primary Replica and up to 8 Secondary Replicas.
	Always On Availability Group supports different forms of Availability Group Failover, 
		namely Automatic Failover, 
		Planned Manual Failover, and Forced Manual Failover.
	Always On SQL Server ensures your data is always available, no matter what happens.
	It can improve the performance of your IT environment with faster access to data.
	Always On SQL Server is scalable and can easily grow with your organization.
	It requires less hardware and maintenance costs than a traditional database. This will help your organization save money.
	It supports Automatic Page Repair to prevent page corruption.
	It provides secure, high-performing transport of data as it readily supports encryption and compression.
	One can easily monitor the Always On SQL Server Availability Groups on the Always On Dashboard. It further monitors the Availability Replicas and Availability Databases and evaluates results for Always On policies.
	

Sandeep Question
---------------- 
1.what permission need to provide from failover cluster.
2.If primary server database encrypted are you need to create same certificate on secondary server
3.what step follow to SQL server on premises and cloud migration 
4.how to connect client computer
5.what is SSL certificate how to use SSL certificate
6.how to enable TDE
		TDE starts from 2019 
		Note: Database must be in Full or Bulk-Logged recovery model.
		
	CREATE MASTER KEY ENCRYPTION -- on MASTER
	CREATE CERTIFICATE POC_Cert  -- on Master
	CREATE DATABASE ENCRYPTION KEY -- on DBA
	LTER DATABASE TEST_TDE SET ENCRYPTION ON;
	BACKUP CERTIFICATE POC_CERT -- on MASTER with private key
	Take Full and T-Log backup on DB
		2nd
	CREATE MASTER KEY ENCRYPTION -- on MASTER
	CREATE CERTIFICATE POC_CERT -- Restore CERTIFICATE from backup
	Restore DB
	
7.what is master key and where to find master key is created
	To protect Certificates and asymentric keys in SQL server Database.
	Symentric key (uses AES algorithm)
8. Availability Group Listeners
	Listner is a virtual network name, that clients used to connect Database in AOAG, 
	It provides a single connectio point regardless of which replica is currently primary.
	
9.How do you configure an Always On Availability Group with a multi subnet network
	Configure WSFC
	Enterpise Edition
	Domain-Joined servers in all subnets
	Network connectivity
	Storage.
	
10.what is recovery model and explain 
	Determine how transactions are logged, 
	what backup options are avaible 
	How much data you can recover in case of failure.
11.Can we add additional database files to a database that is part of an Always On Availability Group
	Yes we can add database files to a database
	but we need to set the path before creating, like drives path
	
12.expalin some point to improve the performance of SQL queries

13. PL SQL command
 
Venkat Question

1.ACID Properties
2.Expalin database encryption how to work?

3.What is always On default port
	The default port for an Always On Availability Group (AG) is 5022. This port is used for database mirroring endpoints.
	
4.prerequities Always On?

5.how many replica add in Always On ? --8
	
6. what is suspect mode? --

7. can you brief me SQL server migration process
	Stopping services on the source server.
	Copying Relativity-specific databases to the target server.
	Restarting services on the target server.
	Post-migration configurations on the target server.
	
8.What is the most probable reason for a SQL query to run as slowly as 5 minutes
	Maybe the data was in the cache yesterday but isn't today.
	Queries can be slow because they're waiting on a bottleneck for a long time. 
	See a detailed list of bottlenecks in types of Waits. 
	RUNNING: Queries can be slow because they're running (executing) for a long time. 
	In other words, these queries are actively using CPU resources.
	
9.What are the bottlenecks that affect the performance of a Database
10.Can we add a new database to an existing Availability Group
11.how to enable TDE in Always On
12. PL SQL command


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1 --Query for creating master key on primary against the Master database.
USE master;
GO
CREATE MASTER KEY ENCRYPTION
       BY PASSWORD='DMK_Backup_123!';
GO
 
-----------------------------
2--Query for creating Certificate on primary master database
 
USE master;
GO 
CREATE CERTIFICATE POC_Cert
       WITH SUBJECT='Certificate for TDE';
GO
 
------------------
3---Query to create database encryption key on primary from already created certificate.
USE TEST_TDE
GO
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE POC_Cert;  
 
-------------------------------------
4---Query to enable encryption on the primary database
ALTER DATABASE TEST_TDE SET ENCRYPTION ON;
GO
----------------------------------
5---Query to create certificate backups on primary
USE master;
GO
BACKUP CERTIFICATE POC_CERT
TO FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (file='D:\Cetificates\POC_CertKey.pvk',
ENCRYPTION BY PASSWORD='TDE_Cert_Backup_123!');
 
6---Query to take encrypted database backup on primary
 
Backup database TEST_TDE to disk='\\BJCPOCSQL02\Agbkp\TEST_TDE.bak'
Backup log TEST_TDE to disk='\\BJCPOCSQL02\Agbkp\TEST_TDE.trn'
 
7---Query to add TDE database to Always on Primary
USE master 
go
 
ALTER AVAILABILITY GROUP [BJCPOCSQL01-AG1] ADD DATABASE [TEST_TDE]
 
-------------------------------
 
POC2
 
Query to create database master key in secondary
 
USE Master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
 
---------------
Query to restore certificate in secondary.
 
USE MASTER
GO
CREATE CERTIFICATE POC_CERT
FROM FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (FILE = 'D:\Cetificates\POC_CertKey.pvk',
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!' );
------------------------------------------------------
 
Query to add TDE database in secondary.
USE master
go
 
ALTER DATABASE TEST_TDE SET HADR AVAILABILITY GROUP = [BJCPOCSQL01-AG1];
 
--------------------------------------------------------------
 
POC1DR
 
Query to create database master key in secondary
 
USE Master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
 
---------------
Query to restore certificate in secondary.
 
USE MASTER
GO
CREATE CERTIFICATE POC_CERT
FROM FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (FILE = 'D:\Cetificates\POC_CertKey.pvk',
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!' );
------------------------------------------------------
 
Query to add TDE database in secondary.
USE master
go
 
ALTER DATABASE TEST_TDE SET HADR AVAILABILITY GROUP = [BJCPOCSQL01-AG1];
 
 
TDE passwords.
 
TDE backup	Service Master Key	SMK_Backup_123!
TDE backup	Database Master Key	DMK_Backup_123!
TDE backup	Certificate	TDE_Cert_Backup_123!
Cert encryption by password		Cert_B@ckup_314!
 
 
 
use master;
go
 
select
    database_name = d.name,
    dek.encryptor_type,
    cert_name = c.name
from sys.dm_database_encryption_keys dek
left join sys.certificates c
on dek.encryptor_thumbprint = c.thumbprint
inner join sys.databases d
on dek.database_id = d.database_id;
 
 
Script for check database encrypted or not
===============================================
SELECT
    db.name,
    db.is_encrypted,
    dm.encryption_state,
    dm.percent_complete,
    dm.key_algorithm,
    dm.key_length
FROM
    sys.databases db
    LEFT OUTER JOIN sys.dm_database_encryption_keys dm
        ON db.database_id = dm.database_id;
GO
========================================================================================
 
Script for check encryption state and details
=================================================
 
SELECT DB_NAME(database_id) AS DatabaseName, encryption_state,encryption_state_desc =CASE encryption_state         
WHEN '0' THEN 'No database encryption key present, no encryption'         
WHEN '1' THEN 'Unencrypted'         
WHEN '2' THEN 'Encryption in progress'         
WHEN '3' THEN 'Encrypted' 
WHEN '4' THEN 'Key change in progress' 
WHEN '5' THEN 'Decryption in progress' 
WHEN '6' THEN 'Protection change in progress (The certificate or asymmetric key that is encrypting the database encryption key is being changed'
ELSE 'No Status'      
END,percent_complete, create_date, key_algorithm, key_length,encryptor_thumbprint, encryptor_type  
FROM sys.dm_database_encryption_keys
=========================================================================================================================
Enable encryption for new database
------------------------------
----------------------------------
----------------------------------------------------
----------------------------------------------------------------
------------------------------------------------------------------------ 
first create Cetificates folder in Data drive(D or G)
 
USE master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
======================================================
USE master;
GO
CREATE CERTIFICATE RCH_Cert
WITH SUBJECT='Certificate for TDE';
GO
=====================================================================
USE master;
GO
BACKUP CERTIFICATE RCH_CERT
TO FILE = 'D:\Cetificates\RCH_CERT.cer'
WITH PRIVATE KEY (file='D:\Cetificates\RCH_CertKey.pvk',
ENCRYPTION BY PASSWORD='TDE_Cert_Backup_123!');
==========================================================================
USE SSISDB
GO
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE RCH_Cert;
===============================================================
USE SSISDB
ALTER DATABASE SSISDB SET ENCRYPTION ON;
GO
=====================================================
 
Encrypted database restore secondary 
============================================
 
if master key not created first create master key after master key created restore primary server certificate
 
USE Master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
=========================================================
 
Restore primary server certificate to secondary server
==============================================
 
USE MASTER
GO
CREATE CERTIFICATE BMT_CERT
FROM FILE = 'share path primary serevr certificate\BMT_CERT.cer'
WITH PRIVATE KEY (FILE = 'share path primary serevr certificate\BMT_CertKey.pvk',
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!' );
 
============================================================================================================
 
Drop encryption 
====================
1.
Use Master
Go
Alter database  DBname Set encryption off
Go
 
2.
USE DBname;
GO
 
DROP DATABASE ENCRYPTION KEY;
 
GO
 
 
3.
 
USE master
 
Go
 
DROP CERTIFICATE certificate name;
 
Go
====================================================================================
 
--check is the database is encrypted
=====================================
select is_encrypted, * from sys.databases
where is_encrypted <> 0
===============================================================================
--shows which encryption key encrypts each database
==================================================================
Select * from sys.dm_database_encryption_keys a inner join sys.certificates b on a.encryptor_thumbprint = b.thumbprint
Select db_name(database_id), * from sys.dm_database_encryption_keys a inner join sys.certificates b on a.encryptor_thumbprint = b.thumbprint
 
========================================================
 
backup of encryption key
================================
 
BACKUP SERVICE MASTER KEY  
TO FILE = 'G:\\Cetificates\SLCHCOCHSQL02T_service_master_key'  
ENCRYPTION BY PASSWORD = 'SMK_Backup_123!'; 
 
USE MASTER
GO
Backup master key to file = 'G:\\Cetificates\SLCHCOCHSQL02T_database_master_key' encryption by password = 'DMK_Backup_123!'
 
 
USE MASTER
GO
BACKUP CERTIFICATE SLC_Cert TO FILE = 'G:\\Cetificates\SLCHCOCHSQL02T_TDE_Cert' 
WITH PRIVATE KEY (FILE = 'G:\\Cetificates\SLCHCOCHSQL02T_TDE_Cert_Key' ,
ENCRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!')
 
=======================================================================================
Restore certificate script for secondary server
 
CREATE CERTIFICATE OccHealth_Cert FROM FILE = '\\BJCOHSSQL01\Cetificates\BJCOHSSQL01_OccHealth_Cert'
WITH PRIVATE KEY (FILE = '\\BJCOHSSQL01\Cetificates\BJCOHSSQL01_OccHealth_Cert_Key' ,
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!');
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 1 --Query for creating master key on primary against the Master database.
USE master;
GO
CREATE MASTER KEY ENCRYPTION
       BY PASSWORD='DMK_Backup_123!';
GO
 
-----------------------------
2--Query for creating Certificate on primary master database
 
USE master;
GO 
CREATE CERTIFICATE POC_Cert
       WITH SUBJECT='Certificate for TDE';
GO
 
------------------
3---Query to create database encryption key on primary from already created certificate.
USE TEST_TDE
GO
CREATE DATABASE ENCRYPTION KEY
WITH ALGORITHM = AES_256
ENCRYPTION BY SERVER CERTIFICATE POC_Cert;  
 
-------------------------------------
4---Query to enable encryption on the primary database
ALTER DATABASE TEST_TDE SET ENCRYPTION ON;
GO
----------------------------------
5---Query to create certificate backups on primary
USE master;
GO
BACKUP CERTIFICATE POC_CERT
TO FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (file='D:\Cetificates\POC_CertKey.pvk',
ENCRYPTION BY PASSWORD='TDE_Cert_Backup_123!');
 
6---Query to take encrypted database backup on primary
 
Backup database TEST_TDE to disk='\\BJCPOCSQL02\Agbkp\TEST_TDE.bak'
Backup log TEST_TDE to disk='\\BJCPOCSQL02\Agbkp\TEST_TDE.trn'
 
7---Query to add TDE database to Always on Primary
USE master 
go
 
ALTER AVAILABILITY GROUP [BJCPOCSQL01-AG1] ADD DATABASE [TEST_TDE]
 
-------------------------------
 
POC2
 
Query to create database master key in secondary
 
USE Master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
 
---------------
Query to restore certificate in secondary.
 
USE MASTER
GO
CREATE CERTIFICATE POC_CERT
FROM FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (FILE = 'D:\Cetificates\POC_CertKey.pvk',
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!' );
------------------------------------------------------
 
Query to add TDE database in secondary.
USE master
go
 
ALTER DATABASE TEST_TDE SET HADR AVAILABILITY GROUP = [BJCPOCSQL01-AG1];
 
--------------------------------------------------------------
 
POC1DR
 
Query to create database master key in secondary
 
USE Master;
GO
CREATE MASTER KEY ENCRYPTION
BY PASSWORD='DMK_Backup_123!';
GO
 
---------------
Query to restore certificate in secondary.
 
USE MASTER
GO
CREATE CERTIFICATE POC_CERT
FROM FILE = 'D:\Cetificates\POC_CERT.cer'
WITH PRIVATE KEY (FILE = 'D:\Cetificates\POC_CertKey.pvk',
DECRYPTION BY PASSWORD = 'TDE_Cert_Backup_123!' );
------------------------------------------------------
 
Query to add TDE database in secondary.
USE master
go
 
ALTER DATABASE TEST_TDE SET HADR AVAILABILITY GROUP = [BJCPOCSQL01-AG1];
 
 
TDE passwords.
 
TDE backup	Service Master Key	SMK_Backup_123!
TDE backup	Database Master Key	DMK_Backup_123!
TDE backup	Certificate	TDE_Cert_Backup_123!
Cert encryption by password		Cert_B@ckup_314!
 

Drop encryption 
====================
1.
Use Master
Go
Alter database  DBname Set encryption off
Go
 
2.
USE DBname;
GO
 
DROP DATABASE ENCRYPTION KEY;
 
GO
 
 
3.
 
USE master
 
Go
 
DROP CERTIFICATE certificate name;
 
Go
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

what is DB snapshot
usage of linked server.
usage of listner server.

--To Monitor query performance---
sys.db_exec_requests -- .
sys.db_exec_sessions -- active session , login time user id.
sys.db_exec_query_stats --
sys.db_exec_query_plan --

---Monitor System performance ---
sys.dm_os_wait_stats
sys.dm_os_memory_clerks
sys.dm_os_sys_info
sys.dm_io_virtual_file_stats(null,null).


SELECT wait_type, wait_time_ms
FROM sys.dm_os_wait_stats;
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
--Replications:
replication is a feature that allows data from one or more databases (the publisher) to be copied 
and distributed to one or more other databases (the subscribers)
publisher
subscription
Distribution

Key Concepts:
--Publisher: The database where the data originates and is replicated.
--Subscriber: The database that receives the replicated data.
--Distributor: An optional SQL Server instance that manages the replication process, acting as a central point for distributing data from the publisher to subscribers.
--Publication: A logical container that defines which databases and objects are included in the replication process.
--Article: The specific tables or views within a publication that are replicated. 
--------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
**What is SQL Server Log Shipping ?

Log shipping in SQL Server provides a disaster recovery solution at the database level. 
A log-shipping configuration involves two or more SQL Server instances and copying of a 
transaction log file from one SQL Server instance to another. Enabling Log shipping will 
automatically transfer transaction log files and restore it across SQL servers. 

---------------------------------------------------------------------------------------

Sudheer Ayyadevara
Use the below query to get all table row count for large databases 
I got the details in less than 3 sec for nlm prod database 
 
SELECT	SCHEMA_NAME(t.schema_id) SchemaName,
		t.[name] TableName, 
		SUM(p.row_count) TotalRows
FROM sys.tables t
INNER JOIN sys.dm_db_partition_stats p
ON t.object_id = p.object_id
	AND t.type_desc = 'USER_TABLE'
	AND p.index_id IN (0,1)
-- WHERE t.[name] = 'Invoices'
GROUP BY t.schema_id, t.[name]
ORDER BY TableName ASC

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 full backup,
Copy only backup
MAX DOP
Cost threshold parallelism.
Log file full
synchronization issue
Query performance
Default isolation

--Cost Threshold for parallelism : 
If the query runs more than 5 seconds it will split the query to execute parallely 

--Max Degree of parallelism: 
Limit the no of processors to use in parallel execution plan
compatibility level 
2022(160,150,140)
2019(150,140,130)
2017(140,130,120)
------------
Indexing Problems: Fragmentation
Solution: ReOrganize, REBUILD

FillFactor

DB migration issues from Onpremisses to Cloud (Cpmpatability issues)
	In your DB If we are using linked server 
	If u use Database Email in your stored procedure
	
	


                                         


